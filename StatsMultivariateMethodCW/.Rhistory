for(i in 1:100){
w = (par[1]*dnorm(x,par[2],par[3]))/((par[1]*dnorm(x,par[2],par[3]))+((1-p)*dnorm(x,par[4],par[5])))
par[1] = sum(w)/length(w)
par[2] = sum(w*x)/sum(w)
par[4] = sum((1-w)*x)/(n-sum(w))
par[3] = sum(w*(x-par[2])^2)/sum(w)
par[5] = sum((1-w)*((x-par[4])^2))/(n-sum(w))
}
w
day = c(25,40,30,55)
mean(day)
sd(day)
37.5+(3*13.22876)
day = c(40,30,55)
mean(day)
sd(day)
41.6666666666777777+(3*12.58306)
day= c(22,5,14,109)
mean(day)
sd(day)
day = c(1,1,1,205)
mean(day)
sd(day)
day = c(1,1,1,900)
mean(day)
sd(day)
day = c(900)
mean(day)
sd(day)
rm(list=ls())
load("C:/Users/Chris/code/ComSci4thYear/StatsMultivariateMethodCW/MM2017Project.RData")
data = HTRU.1
#######Split the Data into Test,Train and Validation##################
labels = data$Class
data = data[,-9]
n = nrow(data)
ind1 = sample(c(1:n),round(n/2))
ind2 = sample(c(1:n)[-ind1], round(n/4))
ind3 = setdiff(c(1:n), c(ind1,ind2))
train.data  = data[ind1,]
train.label = labels[ind1]
valid.data = data[ind2,]
valid.label = labels[ind2]
test.data = data[ind3,]
test.label = labels[ind3]
save(train.data,train.label,valid.data,valid.label,test.data,test.label, file = "data.txt")
########Data is saved, must be read in from now on##################
######Regression########
res.lm = lm(train.label~.,data=train.data)
pred.train = ifelse(res.lm$fitted.values <= 0.5,0,1)
table(train.label,pred.train)
correct.class.train = sum(diag(table(train.label,pred.train)))/nrow(train.data)
res.valid = merge(valid.data,test.data, all = TRUE)
res.labels = c(valid.label,test.label)
n.valid = nrow(res.valid)
yhat.valid = cbind(rep(1,n.valid),data.matrix(res.valid)) %*% res.lm$coefficients
yhat.valid = predict(res.lm,res.valid)
pres.valid = ifelse(yhat.valid<= 0.5,0,1)
table(res.labels,pres.valid)
correct.class.valid = sum(diag(table(res.labels,pres.valid)))/nrow(res.valid)
######Knn############
library(class)
corr.class.rate = rep(NA,20)
for(k in 1:20){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
plot(1:20,corr.class.rate, type = "l", xlab = "k")
max(corr.class.rate)
best.k = which.max(corr.class.rate)
pred = knn(train.data,test.data,train.label, k = best.k)
sum(pred == test.label)/nrow(test.data)
fit.cva = lda(train.data,train.label, prior = rep(1/2,2))
library(MASS)
fit.cva = lda(train.data,train.label, prior = rep(1/2,2))
pred.cva = predict(fit.cva,valid.data)
pred.cva
plot(train.label,train.data,type = "n")
cva.train.data = cbind(train.data,train.label)
View(cva.train.data)
cva.grp1 = cva.train.data[cva.train.data$train.label == 0,-1]
View(cva.grp1)
cva.grp1 = cva.train.data[cva.train.data$train.label == 0,-9]
cva.grp2 = cva.train.data[cva.train.data$train.label == 1,-9]
n = dim(cva.train.data)
n = dim(cva.train.data)[1]
n1 = dim(cva.grp1)[1]
n2 = dim(cva.grp2)[1]
p = dim(cva.train.data)[2] - 1
mean.grp1 = apply(cva.grp1,2,mean)
mean.grp2 = apply(cva.grp1,2,mean)
mean.grp2 = apply(cva.grp2,2,mean)
mean.diff = mean.grp1 - mean.grp2
S.grp1 = var(cva.grp1)
S.grp2 = var(cva.grp2)
s.pooled = ((n1 - 1) * S.grp1 + (n2 - 1)* S.grp2)/(n1+n2 -2)
s.pooled.inv = solve(s.pooled)
a = s.pooled.inv%*%mean.diff
z = t(a) %*% t(valid.data)
boxplot(split(z,valid.label))
train.lda = lda(train.data,train.label,prior = c(0.5,0.5))
train.lda
plot(train.lda)
valid.lda = predict(train.lda,newdata = valid.data)
names(valid.lda)
xtab = table(valid.label,valid.lda$class)
xtab
1 - sum(diag(xtab))/sum(xtab)
test.lda = predict(train.lda,newdata = test.data)
xtab = table(test.label,test.lda$class)
1 - sum(diag(xtab))/sum(xtab)
train.lda = lda(train.data,train.label)
plot(train.lda)
valid.lda = predict(train.lda,valid.data)
xtab = table(valid.label,valid.lda$class)
xtab
valid.lda$posterior[valid.label != valid.lda$class,]
1 - sum(diag(xtab))/sum(xtab)
test.lda = predict(train.lda,test.data)
xtab = table(test.label,test.lda$class)
xtab
1 - sum(diag(xtab))/sum(xtab)
train.qda = qda(train.data,train.label)
valid.qda = predict(train.qda,valid.label)
valid.qda = predict(train.qda,valid.label)
valid.label
train.qda
train.qda = qda(train.label~train.data)
train.qda = qda(train.data,train.label)
valid.qda = predict(train.qda,valid.label)
valid.qda = predict(train.qda,valid.data)
xtab = table(valid.label,valid.qda$class)
xtab
1 - sum(diag(xtab))/sum(xtab)
test.qda = predict(train.qda,test.data)
xtab = table(test.label,test.qda$class)
xtab
1 - sum(diag(xtab))/sum(xtab)
set.seed(126)
?set.seed
library(rpart)
train.tree = cbind(train.label,train.data)
View(train.tree)
train.rp = rpart(train.label~., data = train.tree, method = class)
train.rp = rpart(train.tree$train.label~., data = train.tree, method = class)
train.rp = rpart(train.label~., data = train.tree, method = "class")
train.rp
plot(train.rp)
text(train.rp)
plotcp(train.rp)
valid.tree = cbind(valid.label,valid.data)
valid.rp = predict(train.rp,valid.tree, method = "class")
xtab = table(valid.label,valid.rp)
xtab = table(valid.tree$valid.label,valid.rp)
valid.rp
xtab = table(valid.tree$valid.label,valid.rp$class)
names(valid.rp)
valid.rp = predict(train.rp,valid.tree, method = "class")
valid.rp
xtab = table(valid.tree$valid.label,valid.rp)
length(valid.label)
length(valid.rp)
nrow(valid.tree)
valid.rp = predict(train.rp,valid.tree, type = "class")
xtab = table(valid.label,valid.rp)
xtab
1 - sum(diag(xtab))/sum(xtab)
data.clus = data[,-9]
View(data.clus)
n = nrow(data.clus)
ss = rep(0,2)
ss[1] = (n-1)*sum(apply(data.clus,2,var))
ss[i] = sum(kmeans(data, centers =i, nstart=3))
setwd("C:/Users/Chris/code/ComSci4thYear/StatsMultivariateMethodCW")
rm(list=ls())
load("C:/Users/Chris/code/ComSci4thYear/StatsMultivariateMethodCW/MM2017Project.RData")
data = HTRU.1
labels = data$Class
data = data[,-9]
n = nrow(data)
ind1 = sample(c(1:n),round(n/2))
ind2 = sample(c(1:n)[-ind1], round(n/4))
ind3 = setdiff(c(1:n), c(ind1,ind2))
train.label = labels[ind1]
train.data  = data[ind1,]
valid.data = data[ind2,]
valid.label = labels[ind2]
test.data = data[ind3,]
test.label = labels[ind3]
save(train.data,train.label,valid.data,valid.label,test.data,test.label, file = "data.txt")
pred.class = predict(res.lm, valid.data)
res.lm = lm(train.label~.,data=train.data)
pred.class = predict(res.lm, valid.data)
ifelse(pred.class >= 0.5, pred.class = 1, pred.class = 0)
pred.calss = ifelse(pred.class >= 0.5, pred.class = 1, pred.class = 0)
ifelse(pred.class >= 0.5, pred.class <- 1, pred.class <- 0)
res.lm = lm(train.label~.,data=train.data)
pred.class = predict(res.lm, valid.data)
pred.class = ifelse(pred.class >= 0.5, pred.class <- 1, pred.class <- 0)
corr.class.rate = sum(valid.label == pred.class)/nrow(valid.data)
load(file = "data.txt")
library(class)
corr.class.rate = rep(NA,20)
for(k in seq(1,20,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
plot(1:20,corr.class.rate, type = "l", xlab = "k")
max(corr.class.rate)
library(class)
corr.class.rate = rep(NA,20)
for(k in 1:20){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
plot(1:20,corr.class.rate, type = "l", xlab = "k")
max(corr.class.rate)
best.k = which.max(corr.class.rate)
library(class)
corr.class.rate = rep(NA,10)
for(k in seq(1,20,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
plot(1:20,corr.class.rate, type = "l", xlab = "k")
max(corr.class.rate)
?seq
library(class)
corr.class.rate = rep(NA,11)
step = 1
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[step] = sum(pred == valid.label)/nrow(valid.data)
step = step + 1
}
plot(1:20,corr.class.rate, type = "l", xlab = "k")
max(corr.class.rate)
best.k = which.max(corr.class.rate)
plot(1:21,corr.class.rate, type = "l", xlab = "k")
plot(1:11,corr.class.rate, type = "l", xlab = "k")
library(class)
corr.class.rate = rep(NA,21)
step = 1
for(k in seq(1,41,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[step] = sum(pred == valid.label)/nrow(valid.data)
step = step + 1
}
max(corr.class.rate)
best.k = which.max(corr.class.rate)
table(train.data, pred.class)
table(train.label, pred.class)
table(pred.class, train.label)
table(pred.class, valid.label)
corr.class.rate = sum(valid.label == pred.class)/nrow(valid.data)
library(class)
corr.class.rate = rep(NA,21)
step = 1
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[step] = sum(pred == valid.label)/nrow(valid.data)
step = step + 1
}
plot(1:11,corr.class.rate, type = "l", xlab = "Choice of K", ylab = "Classification Rate")
library(class)
corr.class.rate = rep(NA,11)
step = 1
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[step] = sum(pred == valid.label)/nrow(valid.data)
step = step + 1
}
plot(1:11,corr.class.rate, type = "l", xlab = "Choice of K", ylab = "Classification Rate")
max(corr.class.rate)
best.k = which.max(corr.class.rate)
library(class)
corr.class.rate = rep(NA,21)
for(k in sep(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
library(class)
corr.class.rate = rep(NA,21)
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
if(is.na(corr.class.rate[k])){
corr.class.rate[k] = 0
}
}
plot(1:21,corr.class.rate, type = "l", xlab = "Choice of K", ylab = "Classification Rate")
max(corr.class.rate)
best.k = which.max(corr.class.rate)
corr.class.rate
library(class)
corr.class.rate = rep(NA,21)
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
if(is.na(corr.class.rate[k]) == TRUE){
corr.class.rate[k] = 0
}
}
corr.class.rate
library(class)
corr.class.rate = rep(NA,21)
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
if(corr.class.rate == NA){
corr.class.rate[k] = 0
}
}
?is.na()
library(class)
corr.class.rate = rep(NA,21)
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
if(is.na(corr.class.rate[k]) == TRUE){
corr.class.rate[k] = 0
}
}
corr.class.rate
max(corr.class.rate)
library(class)
corr.class.rate = rep(NA,21)
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
if(is.na(corr.class.rate[k]) == TRUE){
print("hi")
corr.class.rate[k] = 0
}
}
library(class)
corr.class.rate = rep(NA,21)
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
if(!is.na(corr.class.rate[k])){
corr.class.rate[k] = 0
}
}
corr.class.rate
library(class)
corr.class.rate = rep(0,21)
for(k in seq(1,21,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
corr.class.rate
library(class)
corr.class.rate = rep(0,50)
for(k in seq(1,50,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
plot(1:50,corr.class.rate, type = "l", xlab = "Choice of K", ylab = "Classification Rate")
max(corr.class.rate)
best.k = which.max(corr.class.rate)
corr.class.rate = rep(NA,50)
for(k in seq(1,50,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
is.na(corr.clas.rate[2])
is.na(corr.class.rate[2])
library(class)
corr.class.rate = rep(NA,50)
for(k in seq(1,50,2)){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
plot(1:50,corr.class.rate, type = "l", xlab = "Choice of K", ylab = "Classification Rate")
library(class)
corr.class.rate = rep(NA,50)
for(k in 1:50){
pred = knn(train.data,valid.data,train.label,k=k)
corr.class.rate[k] = sum(pred == valid.label)/nrow(valid.data)
}
plot(1:50,corr.class.rate, type = "l", xlab = "Choice of K", ylab = "Classification Rate")
corr.class.rate
max(corr.class.rate)
best.k = which.max(corr.class.rate)
pred.best = knn(train.data,valid.data,train.label,k=21)
table(pred.best, valid.label)
?lda
library(MASS)
?lda
train.lda = lda(train.data,train.label,prior = c(0.5,0.5))
plot(train.lda)
data(crabs)
data.crabs<-as.data.frame(crabs[,c(2,4:8)])
n <- nrow(crabs)
ind1 <- sample(c(1:n), round(n / 2))
ind2 <- sample(c(1:n)[-ind1], round(n / 4))
ind3 <- setdiff(c(1:n), c(ind1, ind2))
train.crab <- data.crabs[ind1, ]
valid.crab <- data.crabs[ind2, ]
test.crab <- data.crabs[ind3, ]
crabs.lda <- lda(train.crab[, -1], train.crab[, 1], prior=c(0.5, 0.5))
crabs.lda
plot(crabs.lda)
valid.lda
train.lda
valid.lda = predict(train.lda,newdata = valid.data)
valid.lda
train.lda
xtab = table(valid.label,valid.lda$class)
xtab
1 - sum(diag(xtab))/sum(xtab)
train.lda = lda(train.data,train.label)
plot(train.lda)
valid.lda = predict(train.lda,valid.data)
xtab = table(valid.label,valid.lda$class)
xtab
valid.lda$posterior[valid.label != valid.lda$class,]
1 - sum(diag(xtab))/sum(xtab)
train.qda = qda(train.data,train.label)
valid.qda = predict(train.qda,valid.data)
xtab = table(valid.label,valid.qda$class)
xtab
plot(train.qda)
plot(train.qda)
xtab = table(valid.label,valid.qda$class)
xtab
1 - sum(diag(xtab))/sum(xtab)
set.seed(126)
library(rpart)
train.tree = cbind(train.label,train.data)
valid.tree = cbind(valid.label,valid.data)
train.rp = rpart(train.label~., data = train.tree, method = "class")
train.rp
plot(train.rp)
text(train.rp)
plotcp(train.rp)
valid.rp = predict(train.rp,valid.tree, type = "class")
xtab = table(valid.label,valid.rp)
xtab
1 - sum(diag(xtab))/sum(xtab)
?set.seed
library(rpart)
train.tree = cbind(train.label,train.data)
valid.tree = cbind(valid.label,valid.data)
train.rp = rpart(train.label~., data = train.tree, method = "class")
train.rp
plot(train.rp)
text(train.rp)
plotcp(train.rp)
valid.rp = predict(train.rp,valid.tree, type = "class")
xtab = table(valid.label,valid.rp)
xtab
1 - sum(diag(xtab))/sum(xtab)
birthtrain <- read.table(file="birthtrn.dat", header=T)
birthtrain <- read.table(file="birthtrn.dat", header=T)
birthtrain$Race <- as.factor(birthtrain$Race)
birth.tree <- rpart(lowbwt~., data=birthtrain, method="class")
birth.tree
summary(birth.tree)
plot(birth.tree)
plot(birth.tree, uniform=T, margin=0.1)
text(birth.tree, fancy=T)
plot(birth.tree, uniform=T, margin=0.1)
text(birth.tree, use.n=T)
plotcp(birth.tree)
printcp(birth.tree)
cpbest <- 0.03
birth.tree <- prune(birth.tree, cp=cpbest)
plot(birth.tree, uniform=T, margin=0.1)
text(birth.tree, use.n=T)
printcp(train.rp)
train.rp = prune(train.rp,cp = 0.01)
train.rp
plot(train.rp)
text(train.rp)
plotcp(train.rp)
printcp(train.rp)
library(rpart)
train.tree = cbind(train.label,train.data)
valid.tree = cbind(valid.label,valid.data)
train.rp = rpart(train.label~., data = train.tree, method = "class")
train.rp
plot(train.rp)
text(train.rp)
text(train.rp,use.n = T)
plot(train.rp)
text(train.rp,use.n = T)
plot(train.rp,uniform = T, margin = 0.1)
text(train.rp,use.n = T)
plot(train.rp,uniform = T, margin = 0.1)
text(train.rp)
valid.rp = predict(train.rp,valid.tree, type = "class")
xtab = table(valid.label,valid.rp)
xtab
library(MASS)
train.lda = lda(train.data,train.label,prior = rep(0.5,2))
train.lda
plot(train.lda)
valid.lda = predict(train.lda,newdata = valid.data)
names(valid.lda)
valid.lda
xtab = table(valid.label,valid.lda$class)
xtab
1 - sum(diag(xtab))/sum(xtab)
valid.lda
plot(train.lda)
train.qda = qda(train.data,train.label)
xtab = table(valid.label,valid.qda$class)
xtab
valid.qda = predict(train.qda,valid.data)
1 - sum(diag(xtab))/sum(xtab)
